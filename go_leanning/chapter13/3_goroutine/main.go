package main //协程
//传统方法是一个循环去做所有的任务
//通过使用并行或者并发的方式，将任务分配多个goroutine去完成，可以大大减小运行时间

//进程是程序在操作系统中的一次执行过程，是系统进行资源分配和调度的基本单位
//线程是是进程的一个执行实例，是程序执行的最小单元
//一个进程可以创建和销毁多个线程，同一个进程中的多个线程可以并发执行
//一个程序最小有一个进程，一个进程最小有一个线程

//多线程程序在单核CPU执行 叫并发（每个线程执行10毫秒进行轮询操作，从微观上一个时间来看只有一个进程在执行）
//多进程程序在多核CPU执行 叫并行（10个CPU执行10个线程，这10个线程理论上可以同时执行）

//golang协程是轻量级的线程，一个线程可以运行多个协程
//go协程的特点
//1.有独立的栈空间
//2.共享程序堆空间
//3.调度由用户控制
//4.协程是轻量级的线程

import (
	"fmt"
	"strconv"
	"time"
)

func test() {
	for i := 0; i <= 10; i++ {
		fmt.Println("test() hello world" + strconv.Itoa(i))
		time.Sleep(time.Second)
	}
}

func main() {
	go test() //go代表开启了一个协程可以和主线程同时执行
	//以主线程为主，主线程执行完毕就会推出程序

	for i := 0; i <= 10; i++ {
		fmt.Println("main() hello world" + strconv.Itoa(i))
		time.Sleep(time.Second)
	}

}
